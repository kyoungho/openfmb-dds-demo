######################################################################
# makefile_Primes_ppc7400Lynx4.0.0gcc3.2.2#
# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
# No duplications, whole or partial, manual or electronic, may be made
# without express written permission.  Any such copies, or
# revisions thereof, must display this notice unaltered.
# This code contains trade secrets of Real-Time Innovations, Inc.
#
#
# This makefile was automatically generated by rtiddsgen.
#
# To compile, type:
#         gmake -f makefile_Primes_ppc7400Lynx4.0.0gcc3.2.2#
# Note: This makefile is only meant to build our example applications and
#       may require alterations to build on your system.
#
# This makefile assumes that your build environment is already correctly
# configured. (For example, the correct version of your compiler and
# linker should be on your PATH.)
######################################################################


SOURCE_DIR = src/

TARGET_ARCH = ppc7400Lynx4.0.0gcc3.2.2

ifndef COMPILER
COMPILER = gcc
endif
COMPILER_FLAGS =
ifndef LINKER
LINKER = gcc
endif
LINKER_FLAGS =
SYSLIBS = -ldb -lm -lrpc -lc -llynx -lgcc -mthreads -mshared
DEFINES = -DRTI_LYNX 
ifndef DEBUG
DEBUG=0 
endif
ifeq ($(DEBUG),1)
COMPILER_FLAGS += -g -O0
LINKER_FLAGS += -g
DEBUG_SFX = d
else
DEBUG_SFX = 
endif
 
ifndef SHAREDLIB
SHAREDLIB=0
endif

ifeq ($(SHAREDLIB),1)
SHAREDLIB_SFX = 
else
SHAREDLIB_SFX = z
DEFINES += -DRTI_STATIC
endif


#export ENV_PREFIX = /usr/lynx/4.0.0/ppc
INCLUDES = -I. -I$(NDDSHOME)/include -I$(NDDSHOME)/include/ndds 
       
LIBS = -L$(NDDSHOME)/lib/$(TARGET_ARCH) \
        \
       -lrticonnextmsgc$(SHAREDLIB_SFX)$(DEBUG_SFX)  \
        -lnddsc$(SHAREDLIB_SFX)$(DEBUG_SFX) -lnddscore$(SHAREDLIB_SFX)$(DEBUG_SFX) $(SYSLIBS) \
       
CDRSOURCES    = Primes.idl
SOURCES = $(SOURCE_DIR)PrimesPlugin.c $(SOURCE_DIR)Primes.c $(SOURCE_DIR)PrimesSupport.c
COMMONSOURCES = $(notdir $(SOURCES))

EXEC          = PrimeNumberRequester PrimeNumberReplier
DIRECTORIES   = objs.dir objs/$(TARGET_ARCH).dir
COMMONOBJS    = $(COMMONSOURCES:%.c=objs/$(TARGET_ARCH)/%.o)

# We actually stick the objects in a sub directory to keep your directory clean.
$(TARGET_ARCH) : $(DIRECTORIES) $(COMMONOBJS) \
	$(EXEC:%=objs/$(TARGET_ARCH)/%.o) \
	$(EXEC:%=objs/$(TARGET_ARCH)/%)

objs/$(TARGET_ARCH)/% : objs/$(TARGET_ARCH)/%.o
	$(LINKER) $(LINKER_FLAGS)   -o $@ $@.o $(COMMONOBJS) $(LIBS)

objs/$(TARGET_ARCH)/%.o : $(SOURCE_DIR)%.c   $(SOURCE_DIR)Primes.h 
	$(COMPILER) $(COMPILER_FLAGS)  -o $@ $(DEFINES) $(INCLUDES) -c $<

#
# Uncomment these lines if you want the support files regenerated when idl
# file is modified
#
#
#  PrimesPlugin.c Primes.c PrimesSupport.c \
#  PrimesPlugin.h Primes.h PrimesSupport.h : \
#		Primes.idl
#	$(NDDSHOME)/bin/rtiddsgen Primes.idl -replace -language C
#
# Here is how we create those subdirectories automatically.
%.dir : 
	@echo "Checking directory $*"
	@if [ ! -d $* ]; then \
		echo "Making directory $*"; \
		mkdir -p $* ; \
	fi;

