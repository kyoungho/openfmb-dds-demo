// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:135

#ifndef _TAO_IDL_MESSAGEC_H_
#define _TAO_IDL_MESSAGEC_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from 
// be/be_visitor_root/root_ch.cpp:62
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_constant/constant_ch.cpp:52

const CORBA::Long MSG_MAX_LENGTH = 255;

// TAO_IDL - Generated from
// be/be_type.cpp:269

struct DateTime;

typedef
  TAO_Fixed_Var_T<
      DateTime
    >
  DateTime_var;

typedef
  DateTime &
  DateTime_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:57

struct  DateTime
{
  typedef DateTime_var _var_type;
  typedef DateTime_out _out_type;
  
  static void _tao_any_destructor (void *);
  ::CORBA::Long year;
  ::CORBA::Long month;
  ::CORBA::Long day;
  ::CORBA::Long hour;
  ::CORBA::Long minute;
  ::CORBA::Long second;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_DateTime;

// TAO_IDL - Generated from
// be/be_visitor_typedef/typedef_ch.cpp:413

typedef char * MessageText;
typedef ::CORBA::String_var MessageText_var;
typedef ::CORBA::String_out MessageText_out;

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_MessageText;

// TAO_IDL - Generated from
// be/be_type.cpp:269

struct Message;

typedef
  TAO_Var_Var_T<
      Message
    >
  Message_var;

typedef
  TAO_Out_T<
      Message
    >
  Message_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:57

struct  Message
{
  typedef Message_var _var_type;
  typedef Message_out _out_type;
  
  static void _tao_any_destructor (void *);
  DateTime time;
  TAO::String_Manager msg;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_Message;

// TAO_IDL - Generated from
// be/be_interface.cpp:644

#if !defined (_MESSAGERECEIVER__VAR_OUT_CH_)
#define _MESSAGERECEIVER__VAR_OUT_CH_

class MessageReceiver;
typedef MessageReceiver *MessageReceiver_ptr;

typedef
  TAO_Objref_Var_T<
      MessageReceiver
    >
  MessageReceiver_var;

typedef
  TAO_Objref_Out_T<
      MessageReceiver
    >
  MessageReceiver_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGERECEIVER_CH_)
#define _MESSAGERECEIVER_CH_

class  MessageReceiver
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<MessageReceiver>;
  typedef MessageReceiver_ptr _ptr_type;
  typedef MessageReceiver_var _var_type;
  typedef MessageReceiver_out _out_type;
  
  // The static operations.
  static MessageReceiver_ptr _duplicate (MessageReceiver_ptr obj);
  
  static void _tao_release (MessageReceiver_ptr obj);
  
  static MessageReceiver_ptr _narrow (::CORBA::Object_ptr obj);
  static MessageReceiver_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static MessageReceiver_ptr _nil (void)
  {
    return static_cast<MessageReceiver_ptr> (0);
  }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_ch.cpp:46
  
  virtual void sendMessage (
      const ::Message & msg);
  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:216
  
  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
private:
  TAO::Collocation_Proxy_Broker *the_TAO_MessageReceiver_Proxy_Broker_;

protected:
  // Concrete interface only.
  MessageReceiver (void);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void MessageReceiver_setup_collocation (void);
  
  // Concrete non-local interface only.
  MessageReceiver (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  MessageReceiver (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);
  
  virtual ~MessageReceiver (void);

private:
  // Private and unimplemented for concrete interfaces.
  MessageReceiver (const MessageReceiver &);
  
  void operator= (const MessageReceiver &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_MessageReceiver;

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// be/be_visitor_root/root.cpp:139

extern 
TAO::Collocation_Proxy_Broker *
(*_TAO_MessageReceiver_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:64

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MESSAGERECEIVER__TRAITS_)
#define _MESSAGERECEIVER__TRAITS_
  
  template<>
  struct  Objref_Traits< ::MessageReceiver>
  {
    static ::MessageReceiver_ptr duplicate (
        ::MessageReceiver_ptr p
      );
    static void release (
        ::MessageReceiver_ptr p
      );
    static ::MessageReceiver_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::MessageReceiver_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:53


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DateTime &); // copying version
 void operator<<= (::CORBA::Any &, DateTime*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DateTime *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DateTime *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:53


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Message &); // copying version
 void operator<<= (::CORBA::Any &, Message*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Message *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Message *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, MessageReceiver_ptr); // copying
 void operator<<= (::CORBA::Any &, MessageReceiver_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MessageReceiver_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DateTime &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DateTime &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Message &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Message &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:55

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MessageReceiver_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, MessageReceiver_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1228
#if defined (__ACE_INLINE__)
#include "MessageC.inl"
#endif /* defined INLINE */

#endif /* ifndef */


