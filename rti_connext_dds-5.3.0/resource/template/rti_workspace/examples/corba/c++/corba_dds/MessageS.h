// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:487

#ifndef _TAO_IDL_MESSAGES_H_
#define _TAO_IDL_MESSAGES_H_


#include "MessageC.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:87

class POA_MessageReceiver;
typedef POA_MessageReceiver *POA_MessageReceiver_ptr;

class  POA_MessageReceiver
  : public virtual PortableServer::ServantBase
{
protected:
  POA_MessageReceiver (void);

public:
  // Useful for template programming.
  typedef ::MessageReceiver _stub_type;
  typedef ::MessageReceiver_ptr _stub_ptr_type;
  typedef ::MessageReceiver_var _stub_var_type;
  
  POA_MessageReceiver (const POA_MessageReceiver& rhs);
  virtual ~POA_MessageReceiver (void);
  
  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
  
  static void _is_a_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _non_existent_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _interface_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _component_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _repository_id_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  virtual void _dispatch (
      TAO_ServerRequest & req,
      void * servant_upcall);
  
  ::MessageReceiver *_this (void);
  
  virtual const char* _interface_repository_id (void) const;
  
  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:45
  
  virtual void sendMessage (
      const ::Message & msg) = 0;
  
  static void sendMessage_skel (
      TAO_ServerRequest & server_request,
      void * servant_upcall,
      void * servant
    );
};

// TAO_IDL - Generated from 
// be/be_codegen.cpp:1290

#include "MessageS_T.h"

#if defined (__ACE_INLINE__)
#include "MessageS.inl"
#endif /* defined INLINE */

#endif /* ifndef */

